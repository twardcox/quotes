/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.JsonArray;
import org.junit.Test;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import static org.junit.Assert.*;

public class AppTest {

    @Test
    public void readFile() throws FileNotFoundException {
        assertNotNull("Should return a string",App.readFile("src/main/resources/recentquotes.json"));
    }

    @Test
    public void buildQuotes() throws FileNotFoundException {
        String jsonString = App.readFile("src/main/resources/onequote.json");
        assertEquals("should return an array of quote objects",
                "Charles Dickens",
                App.buildQuotes(jsonString)[1].author);
    }

    @Test
    public void generateRandomNumberBetween() {
        for ( int i = 0; i < 20; i++ ){
            int randomNum = App.generateRandomNumberBetween(0, 5);
            assertTrue("Random number should be within range",
                    randomNum >= 0 && randomNum <= 5);
        }
    }

    @Test
    public void testAddQuote_Happy() throws FileNotFoundException {
        JsonArray arrType = new JsonArray();

        assertSame("testAddQuote_Happy type should be JsonArray", arrType.getClass().getName(), App.addQuote(App.getQuoteFromWeb()).getClass().getName());
    }

    @Test
    public void testAddToFile_Happy() throws IOException {
        File file = new File("./src/main/resources/recentquotes.json");
        int fileLength = (int) file.length();
        JsonArray quote = App.addQuote(App.getQuoteFromWeb());
        App.addToFile(quote);
        int fileLength2 = (int) file.length();

        assertTrue("testAddToFile_Happy return file size should be bigger than starting file size", fileLength <  fileLength2 );
    }

    @Test
    public void testGetQuoteFromWeb() throws FileNotFoundException {
        assertNotNull("testGetQuoteFromWeb should not be null", App.getQuoteFromWeb());
    }
//    getQuoteFromWeb
}
